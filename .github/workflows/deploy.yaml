name: Deploy with Juju

on:
  workflow_run:
    workflows: 
      - "Pack and Publish Charm"
      - "Pack Rock and Publish Image"
    types:
      - completed

jobs:
  deploy:
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Install Dependencies
        run: |
          sudo snap install juju --channel=3.4/stable --classic
          sudo snap install vault --classic

      - name: Configure Vault and Juju
        run: |
          export CONTROLLER_NAME=juju-controller-35-staging-ps6
          export MODEL_NAME=stg-anbox-cloud-io-k8s
          export VAULT_ADDR=https://vault.admin.canonical.com:8200
          export VAULT_SECRET_PATH_ROLE=secret/prodstack6/roles/${MODEL_NAME}
          export VAULT_SECRET_PATH_COMMON=secret/prodstack6/juju/common
          export VAULT_TOKEN=$(vault write -f -field=token auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
          mkdir -p ~/.local/share/juju
          vault read -field=controller_config "${VAULT_SECRET_PATH_COMMON}/controllers/${CONTROLLER_NAME}" | base64 -d > ~/.local/share/juju/controllers.yaml
          USERNAME=$(vault read -field=username "${VAULT_SECRET_PATH_ROLE}/juju")
          PASSWORD=$(vault read -field=password "${VAULT_SECRET_PATH_ROLE}/juju")
          printf "controllers:\n  %s:\n    user: %s\n    password: %s\n" "$CONTROLLER_NAME" "$USERNAME" "$PASSWORD" > ~/.local/share/juju/accounts.yaml

      - name: Deploy Application
        run: |
          export JUJU_MODEL=admin/stg-anbox-cloud-io-k8s
          export resource_revision=$(juju charm-resources anbox-cloud-io --channel=latest/edge  | awk 'NR==2 {print $2}')
          juju refresh anbox-cloud-io --channel=latest/edge --resource flask-app-image=$resource_revision
          juju wait-for application anbox-cloud-io --query='name=="anbox-cloud-io" && (status=="active" || status=="idle")'
