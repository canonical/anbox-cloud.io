name: Deploy site

on:
  push:
    branches:
      - main
      - deploy-private-runners # TODO: to be removed before merging

env:
  CHARMCRAFT_ENABLE_EXPERIMENTAL_EXTENSIONS: true
  ROCKCRAFT_ENABLE_EXPERIMENTAL_EXTENSIONS: true

jobs:
  pack-charm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Setup Charmcraft
        run: sudo snap install charmcraft --classic --channel=latest/edge

      - name: Fetch libs
        run: |
          cd ./charm 
          charmcraft fetch-libs

      - name: Pack charm
        run: charmcraft pack -v --project-dir ./charm

      - name: Upload charm
        uses: actions/upload-artifact@v4
        with:
          name: anbox-cloud-io-charm
          path: ./*.charm

  pack-rock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3

      - name: Build Assets
        run: |
          yarn install
          yarn run build

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Setup Rockcraft
        run: sudo snap install rockcraft --classic --channel=latest/edge

      - name: Pack Rock
        run: rockcraft pack

      - name: Upload Rock
        uses: actions/upload-artifact@v4
        with:
          name: anbox-cloud-io-rock
          path: ./*.rock

  publish-image:
    runs-on: ubuntu-latest
    needs: pack-rock
    outputs:
      image_url: ${{ steps.set_image_url.outputs.image_url }}
    steps:
      - name: Get Rock
        uses: actions/download-artifact@v4
        with:
          name: anbox-cloud-io-rock

      - name: Set image URL
        id: set_image_url
        run: echo "image_url=ghcr.io/canonical/anbox-cloud.io:$(date +%s)-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Push to GHCR
        run: skopeo --insecure-policy copy oci-archive:$(ls *.rock) docker://${{ steps.set_image_url.outputs.image_url }} --dest-creds "canonical:${{ secrets.GITHUB_TOKEN }}"

  deploy:
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    needs: [pack-charm, publish-image]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo snap install juju --channel=3.4/stable --classic
          sudo snap install vault --classic

      - name: Download Charm Artifact
        uses: actions/download-artifact@v4
        with:
          name: anbox-cloud-io-charm

      - name: Configure Vault and Juju
        run: |
          export VAULT_ADDR=https://vault.admin.canonical.com:8200
          export TF_VAR_login_approle_role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }}
          export TF_VAR_login_approle_secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }}
          export VAULT_SECRET_PATH_ROLE=secret/prodstack6/roles/stg-anbox-cloud-io-k8s
          export VAULT_SECRET_PATH_COMMON=secret/prodstack6/juju/common
          VAULT_TOKEN=$(vault write -f -field=token auth/approle/login role_id=${TF_VAR_login_approle_role_id} secret_id=${TF_VAR_login_approle_secret_id}) 
          export VAULT_TOKEN
          mkdir -p ~/.local/share/juju
          vault read -field=controller_config "${VAULT_SECRET_PATH_COMMON}/controllers/juju-controller-35-staging-ps6" | base64 -d > ~/.local/share/juju/controllers.yaml
          USERNAME=$(vault read -field=username "${VAULT_SECRET_PATH_ROLE}/juju")
          PASSWORD=$(vault read -field=password "${VAULT_SECRET_PATH_ROLE}/juju")
          printf "controllers:\n  juju-controller-35-staging-ps6:\n    user: %s\n    password: %s\n" "$USERNAME" "$PASSWORD" > ~/.local/share/juju/accounts.yaml

      - name: Deploy Application
        run: |
          export JUJU_MODEL=admin/stg-anbox-cloud-io-k8s
          juju refresh anbox-cloud-io --path ./anbox-cloud-io_ubuntu-22.04-amd64.charm --resource flask-app-image=${{ needs.publish-image.outputs.image_url }}
          juju wait-for application anbox-cloud-io --query='name=="anbox-cloud-io" && (status=="active" || status=="idle")'
